---

# A description of the various items is provided at the end of this file.

- item: defaults
  # Colors
  bg: white
  abg: gray
  fg: black
  # afg: black                # non-existent means same as fg
  selectcolor: red            # inherited by radiobutton

  # Font used for labels
  label_font: { family: Helvetica, size: 10, weight: normal }
  # Font used for buttons and other controls
  button_font: { family: Helvetica, size: 10, weight: normal }

- item: server
  name: k4
  type: k4
  address: K4-SNxxxxx.local      # match your serial number in the string
  port: 9200
  startup: TS1;                   # Set test mode

- item: page
  name: main
  server: k4
  columns: 2
  row: 0
  contains:

  - item: group
    columns: 1
    contains:

    - item: group
      contains:
      #include VFO_A_widgets
      #include VFO_B_widgets

    - item: group
      contains:
      #include VFOs_LINKED
      #include VFOs_LOCKED
      #include Test_mode

    - item: group
      contains:
      #include power_cycle

    #include power_slider
    #include main_volume_slider
    #include sub_volume_slider
    #include sidetone_slider

    - item: group
      contains:
      #include atu_bypass_auto
      #include atu_tune
      #include AB_swap_buttons

    - item: group
      contains:
      #include k4_power_off
      #include QUIT

#define VFO_A_widgets
- item: group
  label: VFO A
  columns: 1
  contains:
  #include VFO_A
  - item: group
    columns: 3
    contains:
    #include band_A_cycle
    #include mode_A_cycle
    #include bw_A_cycle
    #include preamp_A_cycle
    #include atten_A_cycle
    #include rfgain_A_cycle
#end

#define VFO_A
- { item: vfo, AorB: A, font: { family: Helvetica, size: 19, weight: normal } }
- item: group
  button_font: { family: Helvetica, size: 6, weight: normal }
  columns: 1
  contains:
  - item: group
    contains:
    - item: text
      text: ' '
    - item: bargraph
      maximum: 42
      length: 317
      cmd: SM1;
      responsevalue: 'value if len(value) < 4 else value.rstrip(";")[2:]'
  - item: text
    text: "S1  2  3  4  5  6  7  8  9    +10   +20   +30  +40   +50  +60"
#end

#define band_A_cycle
- item: cyclebutton
  wraparound: true
  updown: true
  selections:
  - { text: "+  Band\n-  160 m", cmd: BN00;, justify: left }
  - { text: "+  Band\n-   80 m", cmd: BN01;, justify: left }
  - { text: "+  Band\n-   60 m", cmd: BN02;, justify: left }
  - { text: "+  Band\n-   40 m", cmd: BN03;, justify: left }
  - { text: "+  Band\n-   30 m", cmd: BN04;, justify: left }
  - { text: "+  Band\n-   20 m", cmd: BN05;, justify: left }
  - { text: "+  Band\n-   17 m", cmd: BN06;, justify: left }
  - { text: "+  Band\n-   15 m", cmd: BN07;, justify: left }
  - { text: "+  Band\n-   12 m", cmd: BN08;, justify: left }
  - { text: "+  Band\n-   10 m", cmd: BN09;, justify: left }
  - { text: "+  Band\n-    6 m", cmd: BN10;, justify: left }
#end

#define mode_A_cycle
- item: cyclebutton
  wraparound: true
  updown: true
  selections:
  - { text: "+ Mode\n-   CW ", cmd: MD3;, justify: left }
  - { text: "+ Mode\n-  USB ", cmd: MD2;, justify: left }
  - { text: "+ Mode\n-  LSB ", cmd: MD1;, justify: left }
  - { text: "+ Mode\n-   AM ", cmd: MD5;, justify: left }
  - { text: "+ Mode\n-   FM ", cmd: MD4;, justify: left }
  - { text: "+ Mode\n-  DATA", cmd: MD6;, justify: left }
#end

#define bw_A_cycle
- item: cyclebutton
  wraparound: true
  updown: true
  selections:
  - { text: "+    BW\n-    50 Hz", cmd: BW0005;, justify: left }
  - { text: "+    BW\n-   100 Hz", cmd: BW0010;, justify: left }
  - { text: "+    BW\n-   200 Hz", cmd: BW0020;, justify: left }
  - { text: "+    BW\n-   300 Hz", cmd: BW0030;, justify: left }
  - { text: "+    BW\n-   400 Hz", cmd: BW0040;, justify: left }
  - { text: "+    BW\n-   450 Hz", cmd: BW0045;, justify: left }
  - { text: "+    BW\n-   500 Hz", cmd: BW0050;, justify: left }
  - { text: "+    BW\n-  1.8 kHz", cmd: BW0180;, justify: left }
  - { text: "+    BW\n-  2.5 kHz", cmd: BW0250;, justify: left }
  - { text: "+    BW\n-  3.5 kHz", cmd: BW0350;, justify: left }
  - { text: "+    BW\n-  4.0 kHz", cmd: BW0400;, justify: left }
#end

#define VFO_B_widgets
- item: group
  label: VFO B
  columns: 1
  contains:
  #include VFO_B
  - item: group
    columns: 3
    contains:
    #include band_B_cycle
    #include mode_B_cycle
    #include bw_B_cycle
    #include preamp_A_cycle
    #include atten_A_cycle
    #include rfgain_A_cycle
#end

#define VFO_B
- { item: vfo, AorB: B, font: { family: Helvetica, size: 19, weight: normal } }
- item: group
  button_font: { family: Helvetica, size: 6, weight: normal }
  columns: 1
  contains:
  - item: group
    contains:
    - item: text
      text: ' '
    - item: bargraph
      maximum: 42
      length: 317
      cmd: SM1;
      responsevalue: 'value if len(value) < 4 else value.rstrip(";")[2:]'
  - item: text
    text: "S1  2  3  4  5  6  7  8  9    +10   +20   +30  +40   +50  +60"
#end

#define band_B_cycle
- item: cyclebutton
  wraparound: true
  updown: true
  selections:
  - { text: "+  Band\n-  160 m", cmd: BN$00;, justify: left }
  - { text: "+  Band\n-   80 m", cmd: BN$01;, justify: left }
  - { text: "+  Band\n-   60 m", cmd: BN$02;, justify: left }
  - { text: "+  Band\n-   40 m", cmd: BN$03;, justify: left }
  - { text: "+  Band\n-   30 m", cmd: BN$04;, justify: left }
  - { text: "+  Band\n-   20 m", cmd: BN$05;, justify: left }
  - { text: "+  Band\n-   17 m", cmd: BN$06;, justify: left }
  - { text: "+  Band\n-   15 m", cmd: BN$07;, justify: left }
  - { text: "+  Band\n-   12 m", cmd: BN$08;, justify: left }
  - { text: "+  Band\n-   10 m", cmd: BN$09;, justify: left }
  - { text: "+  Band\n-    6 m", cmd: BN$10;, justify: left }
#end

#define mode_B_cycle
- item: cyclebutton
  wraparound: true
  updown: true
  selections:
  - { text: "+ Mode\n-   CW ", cmd: MD$3;, justify: left }
  - { text: "+ Mode\n-  USB ", cmd: MD$2;, justify: left }
  - { text: "+ Mode\n-  LSB ", cmd: MD$1;, justify: left }
  - { text: "+ Mode\n-   BM ", cmd: MD$5;, justify: left }
  - { text: "+ Mode\n-   FM ", cmd: MD$4;, justify: left }
  - { text: "+ Mode\n-  DBTB", cmd: MD$6;, justify: left }
#end

#define bw_B_cycle
- item: cyclebutton
  wraparound: true
  updown: true
  selections:
  - { text: "+    BW\n-    50 Hz", cmd: BW$0005;, justify: left }
  - { text: "+    BW\n-   100 Hz", cmd: BW$0010;, justify: left }
  - { text: "+    BW\n-   200 Hz", cmd: BW$0020;, justify: left }
  - { text: "+    BW\n-   300 Hz", cmd: BW$0030;, justify: left }
  - { text: "+    BW\n-   400 Hz", cmd: BW$0040;, justify: left }
  - { text: "+    BW\n-   450 Hz", cmd: BW$0045;, justify: left }
  - { text: "+    BW\n-   500 Hz", cmd: BW$0050;, justify: left }
  - { text: "+    BW\n-  1.8 kHz", cmd: BW$0180;, justify: left }
  - { text: "+    BW\n-  2.5 kHz", cmd: BW$0250;, justify: left }
  - { text: "+    BW\n-  3.5 kHz", cmd: BW$0350;, justify: left }
  - { text: "+    BW\n-  4.0 kHz", cmd: BW$0400;, justify: left }
#end

#define VFOs_LINKED
- item: cyclebutton
  wraparound: true
  selections:
  - { text: " VFOs\n LINKED",        cmd: FT0;BI0;#DPM0; }
  - { text: " VFOs\n          INDY", cmd: FT0;BI1;#DPM2; }
#end

#define VFOs_LOCKED
- item: cyclebutton
  wraparound: true
  selections:
  - { text: "VFOs\nLOCKED",       cmd: LK1;LK$1;, }
  - { text: " VFOs\n UNLOCKED  ", cmd: LK0;LK$0;, }
#end

#define Test_mode
- item: cyclebutton
  wraparound: true
  selections:
     - { text: "Test mode\n    on",  cmd: TS1;, bg: red }
     - { text: "Test mode\n   off", cmd: TS0;,  }
#end

#define power_cycle
- item: cyclebutton
  updown: true
  selections:
  - { text: "+ POWER\n-      5 W", cmd: PC050L;, justify: left }
  - { text: "+ POWER\n-     10 W", cmd: PC100L;, justify: left }
  - { text: "+ POWER\n-     25 W", cmd: PC025H;, justify: left }
  - { text: "+ POWER\n-     50 W", cmd: PC050H;, justify: left }
  - { text: "+ POWER\n-     75 W", cmd: PC075H;, justify: left }
  - { text: "+ POWER\n-    100 W", cmd: PC100H;, justify: left }
#end

#define preamp_A_cycle
- item: cyclebutton
  updown: true
  selections:
  - { text: "+ PREAMP \n-         0", cmd: PA00;, justify: left }
  - { text: "+ PREAMP \n-         1", cmd: PA11;, justify: left }
  - { text: "+ PREAMP \n-         2", cmd: PA21;, justify: left }
  - { text: "+ PREAMP \n-         3", cmd: PA31;, justify: left }
#end

#define preamp_B_cycle
- item: cyclebutton
  updown: true
  selections:
  - { text: "+ PREAMP \n-         0", cmd: PA$00;, justify: left }
  - { text: "+ PREAMP \n-         1", cmd: PA$11;, justify: left }
  - { text: "+ PREAMP \n-         2", cmd: PA$21;, justify: left }
  - { text: "+ PREAMP \n-         3", cmd: PA$31;, justify: left }
#end

#define atten_A_cycle
- item: cyclebutton
  updown: true
  selections:
  - { text: "+ ATTEN \n-    0 dB", cmd: RA000;RA$000;, justify: left }
  - { text: "+ ATTEN \n-    3 dB", cmd: RA031;RA$031;, justify: left }
  - { text: "+ ATTEN \n-    6 dB", cmd: RA061;RA$061;, justify: left }
  - { text: "+ ATTEN \n-   12 dB", cmd: RA121;RA$121;, justify: left }
  - { text: "+ ATTEN \n-   15 dB", cmd: RA151;RA$151;, justify: left }
  - { text: "+ ATTEM \n-   18 dB", cmd: RA181;RA$181;, justify: left }
#end

#define atten_B_cycle
- item: cyclebutton
  updown: true
  selections:
  - { text: "+ ATTEN \n-    0 dB", cmd: RA$000;RA$000;, justify: left }
  - { text: "+ ATTEN \n-    3 dB", cmd: RA$031;RA$031;, justify: left }
  - { text: "+ ATTEN \n-    6 dB", cmd: RA$061;RA$061;, justify: left }
  - { text: "+ ATTEN \n-   12 dB", cmd: RA$121;RA$121;, justify: left }
  - { text: "+ ATTEN \n-   15 dB", cmd: RA$151;RA$151;, justify: left }
  - { text: "+ ATTEM \n-   18 dB", cmd: RA$181;RA$181;, justify: left }
#end

#define rfgain_A_cycle
- item: cyclebutton
  wraparound: true
  selections:
  - { text: " RF GAIN \n  -0 ", cmd: RG-00;RG$-00; }
  - { text: " RF GAIN \n -10 ", cmd: RG-10;RG$-10; }
#end

#define rfgain_B_cycle
- item: cyclebutton
  wraparound: true
  selections:
  - { text: " RF GAIN \n  -0 ", cmd: RG$-00;RG$-00; }
  - { text: " RF GAIN \n -10 ", cmd: RG$-10;RG$-10; }
#end

#define power_slider
- item: group
  label: Power (Watts)
  contains:
  - item: slider
    from: 0.0
    to: 110.0
    length: 300
    incrementvalue: '.0001 if value > 0.0 and value <= .01 else .1 if value <= 10.0 else 1.0'
    cmdvalue: '"PC{:03d}L;".format(int(float(value)*10)) if float(value) <= 10.0 else "PC{:03d}H;".format(int(value))'
    responsevalue: 'float(value[2:5])/10 if value[5] == "L" else float(value[2:5])/10000 if value[5] == "X" else float(value[2:5])'
#end

#define main_volume_slider
- item: group
  label: Main Volume
  contains:
  - item: slider
    from: 0
    to: 100
    length: 300
    incrementvalue: '1'
    cmdvalue: '"AG{:03d};".format(int(float(value)*0.6))'
    responsevalue: 'float(value[2:5])/0.6'
#end

#define sub_volume_slider
- item: group
  label: Sub Volume
  contains:
  - item: slider
    from: 0
    to: 100
    length: 300
    incrementvalue: '1'
    cmdvalue: '"AG${:03d};".format(int(float(value)*0.6))'
    responsevalue: 'float(value[3:6])/0.6'
#end

#define sidetone_slider
- item: group
  label: Sidetone
  contains:
  - item: slider
    from: 0
    to: 60
    length: 300
    incrementvalue: '1'
    cmdvalue: '"ML0{:03d};".format(int(float(value)))'
    responsevalue: 'float(value[3:6])'
#end

#define atu_bypass_auto
- item: cyclebutton
  wraparound: true
  selections:
    - { text: "ATU bypass", cmd: AT1; }
    - { text: "ATU auto",   cmd: AT2; }
#end

#define atu_tune
- { item: button, groupid: atu, text: " TUNE ", cmd: SW40; }
#end

#define AB_swap_buttons
- item: group
  columns: 4
  contains:
    - { item: button,      groupid: misc, indicator: 0, text: " A/B ",     cmd:  SW41; }
    - { item: button,      groupid: misc, indicator: 0, text: " A->B ",    cmd:  DE0010;SW72; }
    - { item: button,      groupid: misc, indicator: 0, text: " B->A ",    cmd:  SW147; }
#end

#define k4_power_off
- { item: button, groupid: k4, text: '    K4 POWER OFF     ', cmd:  PS0; }
#end

#define QUIT
- { item: button,      groupid: misc, indicator: 0, text: '   Exit    ', directive:  quit }
#end

# preprocessor directives:
#   #define <block_name>
#     - defines a block, <block_name>,  containing all following lines until a #end directive
#       must appear in column 1
#
#   #end
#     - terminates a block definition
#       must appear in column 1
#
#   #include <block_name>
#     - is replaced by the block <block_name>
#       indentation is preserved.

# item descriptions:
#
# server options:
#   name: The name of the server
#   type: The type of the server
#     k4 is required for k4 servers to receive responses
#   address: The ip address of the server
#   port: The port to connect to
#   startup: command(s) to be sent to the server on startup.

# page options:
#   name: The page name (required).
#     The page named 'main' is the first one displayed.
#   server: The default server items contained in this page will use
#   columns: The number of columns in which contained items will be displayed.
#   contains: The list of items this page contains

# group options:
#   label: The label that will be displayed for this group.
#   server: The default server items contained in this group will use
#   row: The row of the container in which this group will be placed.
#   column: The column of the container in which this group will be placed.
#   rowspan: The number of rows this group will occupy.
#   columnspan: The number of columns this group will occupy.
#   columns: The number of columns in which contained items will be displayed.
#   tabtext: Contains the name displayed on this tab of the containing notebook
#   contains: The list of items this group contains

# button options:
#   text: button text
#   server: The server name of the server referenced by this button
#   cmd: Either:
#     a text string to be sent to k4, or
#     a python 'list' object containg server name/cmd pairs (python dict objects)
#     to be sent, i.e. [ k4: k4cmd, s1: s1cmd ] would send 'k4cmd' to server k4, and
#     then send 's1cmd' to server s1.
#   directive:
#     'quit', terminates the program
#     'show_previous_page', displays the previously-displayed page
#     'show_page XXX', displays page with the name: XXX
#   fg: foreground color
#   bg: background color
#   abg: active background color
#   justify: 'left', 'right', 'center' to justify text within the Button

# cyclebutton options:
#   wraparound: true or false. whether the button wraps back around to the first selection
#   updown: true or false, if true, selections cycle up if the button is clicked in its upper half
#       and selections cycle down if the button is clicked in its lower half
#   selections: a list of selections, each of which may have the following elements
#       text: button text
#       server: The server name of the server referenced by this button
#       cmd: Either:
#         a text string to be sent to k4, or
#         a python 'list' object containg server name/cmd pairs (python dict objects)
#         to be sent, i.e. [ k4: k4cmd, s1: s1cmd ] would send 'k4cmd' to server k4, and
#         then send 's1cmd' to server s1.
#       fg: foreground color
#       bg: background color
#       abg: active background color
#       justify: 'left', 'right', 'center' to justify text within the Button
#       blink: If set to true, the button will blink.

# radiobutton options:
#   groupid: a string shared by all buttons in this group, unique to all groups
#   indicator: Set to 0 if no indicator is to be displayed
#   text: button text
#   server: The server name of the server referenced by this button
#   cmd: Either:
#     a text string to be sent to k4, or
#     a python 'list' object containg server name/cmd pairs (python dict objects)
#     to be sent, i.e. [ k4: k4cmd, s1: s1cmd ] would send 'k4cmd' to server k4, and
#     then send 's1cmd' to server s1.
#   fg: foreground color
#   bg: background color
#   abg: active background color
#   selectcolor: button color when selected
#   blink: If set to true, the button will blink.

# slider options:
#   from: The lowest value of the slider
#   to: The highest value of he slider
#   orient: Either:
#     vertical: Specifies a vertical slider
#     horizontal: Specifies a horizontal slider
#   length: The length of the slider in pixels
#   width: The width in pixels if the slider is verical, otherwise the height
#   increment: A python expression to set the slider increment given the variable value
#   server: The server name of the server referenced by this slider
#   cmd: A python expression to produce the K4 command given the variable 'value'.
#   response: A python expression to extract the slider value from the K4 response.
#   font: The font used for the slider's text.
#   fg: foreground color
#   bg: background color

# vfo options:
#   AorB: 'A' for vfo A and 'B' for vfo B
#   fg: foreground color
#   bg: background color
#   font: the font used for the vfo
#   step_spinbox: When set to 'true', the vfo step will be selected by a spinbox

# notebook (tabs) option:
# A notebook contains only groups, each selecable by a tab
# Each group it contains must have a tabtext option
