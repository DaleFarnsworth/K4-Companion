#!/usr/bin/env python3

# This program copies a data file into a python variable definition
# The variable must be a global variable and its definition must be
# of the form:
# config_data = '''
# '''

import optparse
import os
import re

def add_data_variable():
    re_var = f'{Options.variable} *=[^=]'
    datafile = open(Options.datafilename, 'r')
    infile = open(Options.infilename, 'r')
    outfile = open(Options.outfilename, 'w')

    while True:
        line = infile.readline()
        if line == '':
            break
        outfile.write(line)
        if re.search(re_var, line) != None:
            while True:
                line = infile.readline()
                if line.startswith("'''"):
                    break
            while True:
                line = datafile.readline()
                if line == '':
                    break
                outfile.write(line)
            outfile.write("'''\n")

    outfile.close()
    infile.close()
    datafile.close()

class MyOptionParser(optparse.OptionParser):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        super().set_usage(optparse.SUPPRESS_USAGE)

    def error(self, str):
        print('Usage: add_data_variable [options] <data_file_name>\n')
        self.print_help()
        print()
        super().error(str)

class Options():
    config_file = None
    verbose = 0
    debug = 0
    yaml_file = None

    @staticmethod
    def Parse():
        parser = MyOptionParser()
        parser.add_option('-i', '--input', dest='infilename', default='k4companion',
                          help="input script filename FILE", metavar="FILE")
        parser.add_option('-o', '--output', dest='outfilename', default=None,
                          help="output script filename FILE", metavar="FILE")
        parser.add_option('-v', '--variable', dest='variable', default = 'config_data',
                          help="the variable name to be written")
        (options, args) = parser.parse_args()

        Options.infilename = options.infilename
        Options.outfilename = options.outfilename
        if Options.outfilename == None:
            Options.outfilename = options.infilename + '.py'
        Options.variable = options.variable

        if len(args) == 0:
            parser.error('No data file specified.')

        if len(args) > 1:
            parser.error("Unexpected argument '{arg}'".format(arg=args[1]))

        Options.datafilename = args[0]

        if not os.path.isfile(Options.infilename):
            parser.error(f'{Options.infilename} not found.')

        if not os.path.isfile(Options.datafilename):
            parser.error(f'{Options.datafilename} not found.')

def main():
    Options.Parse()

    add_data_variable()

if __name__ == '__main__':
    main()

# vim: set expandtab ts=4 sw=4:
